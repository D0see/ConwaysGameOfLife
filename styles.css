* {
    border: 0;
    margin: 0;
    box-sizing: border-box;
}

:root {
    --shadows: rgb(26, 26, 26);
}

html {
    background-color: rgb(255, 255, 255);
}

/* Header */

#gridForm {
    margin-bottom: 35px;
}

.gridAndHeight {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 15vw;
    margin: 10px auto 0px;
}

input {
    border: 2px solid black;
    border-radius: 2px;
}

input:hover {
    border: 2px solid rgb(76, 245, 222);
}

.input {
    position: relative;
    top: 35px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#gridHeightContainer {
    /* align input right */
}

#generateGrid {
    position: relative;
    margin: auto;
    top: 15px;
    height: 6vh;
    min-height: 100px;
    width: 6vh;
    min-width: 100px;
    border-radius: 100%;
    background-color: white;
    border: 3px solid darkgray;
    box-shadow: 2px 2px 2px 2px var(--shadows);
    transition: transform 0.10s ease,
                box-shadow 0.10s ease,
                border-color 0.10s ease;
}

#generateGrid:active {
    transform: scale(0.98) rotate(12deg);
    box-shadow: 2px 2px 2px 2px var(--shadows),
                -2px -2px 2px 0px var(--shadows),
                -2px 2px 2px 0px var(--shadows),
                2px -2px 2px 0px var(--shadows);
}

#generateGrid:hover{
    border: 3px solid rgb(76, 245, 222);
    cursor: pointer;
}

/* Grid */

#grid {
    cursor: pointer;
    text-align: center;
    display: grid;
    width: 80vw;
    max-width: 70vh;
    height: 80vw;
    max-height: 70vh;
    gap: 1px;
    margin: 0 auto;
    background-color: white; 
}

.oscillatorBlock {
    background: linear-gradient(90deg, rgba(177, 72, 226, 0.60) 0%, rgba(177, 72, 226, 0.85) 50%, rgba(177, 72, 226, 0.60) 100%);     
    animation: moving-background 5s linear infinite;
    background-size: 500% 500%;
    transition: background-color 0.25s ease;
}

.stillLifeBlock {
    background: linear-gradient(90deg, rgba(72, 221, 226, 0.60) 0%, rgba(72, 221, 226, 0.85) 50%, rgba(72, 221, 226, 0.60) 100%);     
    animation: moving-background 5s linear infinite;
    background-size: 500% 500%;
    transition: background-color 0.25s ease;
}

.spaceshipBlock {
    background: linear-gradient(90deg, rgba(226, 72, 111, 0.60) 0%, rgba(226, 72, 111, 0.85) 50%, rgba(226, 72, 111, 0.60) 100%);     
    animation: moving-background 5s linear infinite;
    background-size: 500% 500%;
    transition: background-color 0.25s ease;
}

@keyframes moving-background {
    0% {
        background-position: 0% 0%;
    }
    100% {
        background-position: -500% 0%;
    }
}

.block:hover {
    cursor: pointer;
}

#tutorial {
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


/* Player */


#player {
    margin: 10px auto 0px;
    padding: 15px 0;
    gap: 2vh;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;

}

.playerButton {
    width: 8vh;
    height: 8vh;
    min-width: 40px;
    min-height: 40px;
    font-weight: 400;
    font-size: 3vh;
    border-radius: 100%;
    border: 3px solid darkgray;
    transition: transform 0.10s ease,
                box-shadow 0.15s ease,
                border-color 0.10s ease,
                background-color 0.25s ease;
}

.pressed {
    transform: scale(0.90);
    background-color: lightblue;
    box-shadow: 2px 2px 2px 0px var(--shadows), 
                -2px -2px 2px 0px var(--shadows),
                -2px 2px 2px 0px var(--shadows), 
                2px -2px 2px 0px var(--shadows);
    pointer-events: none;
}

.unpressed {
    transform: scale(1);
    background-color: white;
    box-shadow: 2px 2px 2px 2px var(--shadows);
}

.playerButton:hover {
    border-color: rgb(76, 245, 222);
    cursor: pointer;
}

.playerButton:active {
    transform: scale(0.90);
    box-shadow: 2px 2px 2px 0px var(--shadows),
                -2px -2px 2px 0px var(--shadows),
                -2px 2px 2px 0px var(--shadows),
                2px -2px 2px 0px var(--shadows);
}

/* I need to make the width height menu look better. */